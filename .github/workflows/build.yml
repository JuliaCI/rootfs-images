name: Build
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents:            write
  actions:             none
  checks:              none
  deployments:         none
  issues:              none
  discussions:         none
  packages:            none
  pull-requests:       none
  repository-projects: none
  security-events:     none
  statuses:            none
jobs:
  build:
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          # Build a bunch of different "agent" rootfs images.
          # ppc64le pending: https://github.com/buildkite/agent/issues/1472
          - 'agent_linux.aarch64'
          - 'agent_linux.armv7l'
          # - 'agent_linux.ppc64le'
          - 'agent_linux.x86_64'

          # The `package_linux` images are all `debian`-based.
          - 'package_linux.aarch64'
          - 'package_linux.armv7l'
          - 'package_linux.i686'
          - 'package_linux.powerpc64le'
          - 'package_linux.x86_64'

          # The `package_centos6` images are based on CentOS 6.
          # The purpose of these images is to build Julia binaries for
          # use on legacy systems with old versions of glibc (e.g. 2.12)
          - 'package_centos6.x86_64'

          # The `package_musl` image is `alpine`-based.
          - 'package_musl.x86_64'

          # The `tester_linux` images are all `debian`-based.
          # They do not include the compiler toolchain.
          - 'tester_linux.aarch64'
          - 'tester_linux.armv7l'
          - 'tester_linux.i686'
          - 'tester_linux.powerpc64le'
          - 'tester_linux.x86_64'

          # The `tester_centos6` images are based on CentOS 6.
          # They do not include the compiler toolchain.
          - 'tester_centos6.x86_64'

          # The `tester_musl` image is `alpine`-based.
          # It does not include the compiler toolchain.
          - 'tester_musl.x86_64'

          # The `llvm_passes` image is a short-term solution for the `analyzegc` builder.
          - 'llvm_passes.x86_64'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'
          arch: x64
      - run: sudo touch /etc/apt/sources.list.d/additional_debian.list
      - run: echo 'deb [trusted=yes] http://deb.debian.org/debian buster main' | sudo tee -a /etc/apt/sources.list.d/additional_debian.list
      - run: echo 'deb [trusted=yes] http://security.debian.org/debian-security buster/updates main' | sudo tee -a /etc/apt/sources.list.d/additional_debian.list
      - run: echo 'deb [trusted=yes] http://deb.debian.org/debian buster-updates main' | sudo tee -a /etc/apt/sources.list.d/additional_debian.list
      - run: sudo apt-get update
      - run: sudo apt-get -y install binfmt-support debootstrap qemu-user-static yum
      - run: update-binfmts --display
      - run: julia --color=yes --project=. -e 'using Pkg; Pkg.instantiate()'
      - run: julia --color=yes --project=. -e 'using Pkg; Pkg.precompile()'
      - run: |
          IMAGE_NAME=$(echo ${{ matrix.image }} | cut -d. -f1)
          IMAGE_ARCH=$(echo ${{ matrix.image }} | cut -d. -f2)
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_ARCH=$IMAGE_ARCH" >> $GITHUB_ENV
      - run: julia --color=yes --project=. images/${{ env.IMAGE_NAME }}.jl --arch=${{ env.IMAGE_ARCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
